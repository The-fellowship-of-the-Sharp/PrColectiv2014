//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("NecropolisModel", "FK__AlocareCu__cnpDe__267ABA7A", "Persoana", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Persoana), "AlocareCuProprietar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.AlocareCuProprietar), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK__AlocareCu__pozaI__276EDEB3", "Poza", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Poza), "AlocareCuProprietar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.AlocareCuProprietar), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_AlocareCuProprietar_AlocareLoc", "AlocareLoc", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.AlocareLoc), "AlocareCuProprietar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.AlocareCuProprietar), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_AlocareFaraProprietar", "AlocareLoc", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.AlocareLoc), "AlocareFaraProprietar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.AlocareFaraProprietar), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_AlocalreLoc_Persoana", "Persoana", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Persoana), "AlocareLoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.AlocareLoc), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_AlocareLoc_Mormant", "Mormant", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Mormant), "AlocareLoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.AlocareLoc), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_ContractConcesiune_AlocareLoc", "AlocareLoc", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.AlocareLoc), "ContractConcesiune", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.ContractConcesiune), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_CerereLoc_Persoana", "Persoana", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Persoana), "CerereLoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.CerereLoc), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_CerereLoc_Stadiu", "Stadiu", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Stadiu), "CerereLoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.CerereLoc), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_Mormant_Cimitir", "Cimitir", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Cimitir), "Mormant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.Mormant), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_Domiciliu_Strada", "Strada", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Strada), "Domiciliu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.Domiciliu), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_Persoana_Domiciliu", "Domiciliu", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Domiciliu), "Persoana", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.Persoana), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_Strada_Localitate", "Localitate", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Localitate), "Strada", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.Strada), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_ProgramareInmormantare_Mormant", "Mormant", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Mormant), "ProgramareInmormantare", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.ProgramareInmormantare), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_ProgramareInmormantare_Persoana", "Persoana", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Persoana), "ProgramareInmormantare", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.ProgramareInmormantare), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_Reclamatie_Persoana", "Persoana", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Persoana), "Reclamatie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.Reclamatie), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "FK_ProgramareInmormantare_Religie", "Religie", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GraveyardManagement.Model.EntityFramework.Religie), "ProgramareInmormantare", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.ProgramareInmormantare), true)]
[assembly: EdmRelationshipAttribute("NecropolisModel", "DetinatorContractConcesiune", "ContractConcesiune", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.ContractConcesiune), "Persoana", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GraveyardManagement.Model.EntityFramework.Persoana))]

#endregion

namespace GraveyardManagement.Model.EntityFramework
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NecropolisEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NecropolisEntities object using the connection string found in the 'NecropolisEntities' section of the application configuration file.
        /// </summary>
        public NecropolisEntities() : base("name=NecropolisEntities", "NecropolisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NecropolisEntities object.
        /// </summary>
        public NecropolisEntities(string connectionString) : base(connectionString, "NecropolisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NecropolisEntities object.
        /// </summary>
        public NecropolisEntities(EntityConnection connection) : base(connection, "NecropolisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlocareCuProprietar> AlocareCuProprietar
        {
            get
            {
                if ((_AlocareCuProprietar == null))
                {
                    _AlocareCuProprietar = base.CreateObjectSet<AlocareCuProprietar>("AlocareCuProprietar");
                }
                return _AlocareCuProprietar;
            }
        }
        private ObjectSet<AlocareCuProprietar> _AlocareCuProprietar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlocareFaraProprietar> AlocareFaraProprietar
        {
            get
            {
                if ((_AlocareFaraProprietar == null))
                {
                    _AlocareFaraProprietar = base.CreateObjectSet<AlocareFaraProprietar>("AlocareFaraProprietar");
                }
                return _AlocareFaraProprietar;
            }
        }
        private ObjectSet<AlocareFaraProprietar> _AlocareFaraProprietar;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlocareLoc> AlocareLoc
        {
            get
            {
                if ((_AlocareLoc == null))
                {
                    _AlocareLoc = base.CreateObjectSet<AlocareLoc>("AlocareLoc");
                }
                return _AlocareLoc;
            }
        }
        private ObjectSet<AlocareLoc> _AlocareLoc;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CerereLoc> CerereLoc
        {
            get
            {
                if ((_CerereLoc == null))
                {
                    _CerereLoc = base.CreateObjectSet<CerereLoc>("CerereLoc");
                }
                return _CerereLoc;
            }
        }
        private ObjectSet<CerereLoc> _CerereLoc;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cimitir> Cimitir
        {
            get
            {
                if ((_Cimitir == null))
                {
                    _Cimitir = base.CreateObjectSet<Cimitir>("Cimitir");
                }
                return _Cimitir;
            }
        }
        private ObjectSet<Cimitir> _Cimitir;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractConcesiune> ContractConcesiune
        {
            get
            {
                if ((_ContractConcesiune == null))
                {
                    _ContractConcesiune = base.CreateObjectSet<ContractConcesiune>("ContractConcesiune");
                }
                return _ContractConcesiune;
            }
        }
        private ObjectSet<ContractConcesiune> _ContractConcesiune;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Domiciliu> Domiciliu
        {
            get
            {
                if ((_Domiciliu == null))
                {
                    _Domiciliu = base.CreateObjectSet<Domiciliu>("Domiciliu");
                }
                return _Domiciliu;
            }
        }
        private ObjectSet<Domiciliu> _Domiciliu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Istoric> Istoric
        {
            get
            {
                if ((_Istoric == null))
                {
                    _Istoric = base.CreateObjectSet<Istoric>("Istoric");
                }
                return _Istoric;
            }
        }
        private ObjectSet<Istoric> _Istoric;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Localitate> Localitate
        {
            get
            {
                if ((_Localitate == null))
                {
                    _Localitate = base.CreateObjectSet<Localitate>("Localitate");
                }
                return _Localitate;
            }
        }
        private ObjectSet<Localitate> _Localitate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Mormant> Mormant
        {
            get
            {
                if ((_Mormant == null))
                {
                    _Mormant = base.CreateObjectSet<Mormant>("Mormant");
                }
                return _Mormant;
            }
        }
        private ObjectSet<Mormant> _Mormant;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Persoana> Persoana
        {
            get
            {
                if ((_Persoana == null))
                {
                    _Persoana = base.CreateObjectSet<Persoana>("Persoana");
                }
                return _Persoana;
            }
        }
        private ObjectSet<Persoana> _Persoana;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Poza> Poza
        {
            get
            {
                if ((_Poza == null))
                {
                    _Poza = base.CreateObjectSet<Poza>("Poza");
                }
                return _Poza;
            }
        }
        private ObjectSet<Poza> _Poza;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProgramareInmormantare> ProgramareInmormantare
        {
            get
            {
                if ((_ProgramareInmormantare == null))
                {
                    _ProgramareInmormantare = base.CreateObjectSet<ProgramareInmormantare>("ProgramareInmormantare");
                }
                return _ProgramareInmormantare;
            }
        }
        private ObjectSet<ProgramareInmormantare> _ProgramareInmormantare;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reclamatie> Reclamatie
        {
            get
            {
                if ((_Reclamatie == null))
                {
                    _Reclamatie = base.CreateObjectSet<Reclamatie>("Reclamatie");
                }
                return _Reclamatie;
            }
        }
        private ObjectSet<Reclamatie> _Reclamatie;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Religie> Religie
        {
            get
            {
                if ((_Religie == null))
                {
                    _Religie = base.CreateObjectSet<Religie>("Religie");
                }
                return _Religie;
            }
        }
        private ObjectSet<Religie> _Religie;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stadiu> Stadiu
        {
            get
            {
                if ((_Stadiu == null))
                {
                    _Stadiu = base.CreateObjectSet<Stadiu>("Stadiu");
                }
                return _Stadiu;
            }
        }
        private ObjectSet<Stadiu> _Stadiu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Strada> Strada
        {
            get
            {
                if ((_Strada == null))
                {
                    _Strada = base.CreateObjectSet<Strada>("Strada");
                }
                return _Strada;
            }
        }
        private ObjectSet<Strada> _Strada;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlocareCuProprietar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlocareCuProprietar(AlocareCuProprietar alocareCuProprietar)
        {
            base.AddObject("AlocareCuProprietar", alocareCuProprietar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlocareFaraProprietar EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlocareFaraProprietar(AlocareFaraProprietar alocareFaraProprietar)
        {
            base.AddObject("AlocareFaraProprietar", alocareFaraProprietar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlocareLoc EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlocareLoc(AlocareLoc alocareLoc)
        {
            base.AddObject("AlocareLoc", alocareLoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CerereLoc EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCerereLoc(CerereLoc cerereLoc)
        {
            base.AddObject("CerereLoc", cerereLoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cimitir EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCimitir(Cimitir cimitir)
        {
            base.AddObject("Cimitir", cimitir);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractConcesiune EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractConcesiune(ContractConcesiune contractConcesiune)
        {
            base.AddObject("ContractConcesiune", contractConcesiune);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Domiciliu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDomiciliu(Domiciliu domiciliu)
        {
            base.AddObject("Domiciliu", domiciliu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Istoric EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIstoric(Istoric istoric)
        {
            base.AddObject("Istoric", istoric);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Localitate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocalitate(Localitate localitate)
        {
            base.AddObject("Localitate", localitate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Mormant EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMormant(Mormant mormant)
        {
            base.AddObject("Mormant", mormant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persoana EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersoana(Persoana persoana)
        {
            base.AddObject("Persoana", persoana);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Poza EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPoza(Poza poza)
        {
            base.AddObject("Poza", poza);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProgramareInmormantare EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProgramareInmormantare(ProgramareInmormantare programareInmormantare)
        {
            base.AddObject("ProgramareInmormantare", programareInmormantare);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reclamatie EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReclamatie(Reclamatie reclamatie)
        {
            base.AddObject("Reclamatie", reclamatie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Religie EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReligie(Religie religie)
        {
            base.AddObject("Religie", religie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stadiu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStadiu(Stadiu stadiu)
        {
            base.AddObject("Stadiu", stadiu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Strada EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStrada(Strada strada)
        {
            base.AddObject("Strada", strada);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="AlocareCuProprietar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlocareCuProprietar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlocareCuProprietar object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static AlocareCuProprietar CreateAlocareCuProprietar(global::System.Int32 id)
        {
            AlocareCuProprietar alocareCuProprietar = new AlocareCuProprietar();
            alocareCuProprietar.id = id;
            return alocareCuProprietar;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> alocareId
        {
            get
            {
                return _alocareId;
            }
            set
            {
                OnalocareIdChanging(value);
                ReportPropertyChanging("alocareId");
                _alocareId = StructuralObject.SetValidValue(value, "alocareId");
                ReportPropertyChanged("alocareId");
                OnalocareIdChanged();
            }
        }
        private Nullable<global::System.Int32> _alocareId;
        partial void OnalocareIdChanging(Nullable<global::System.Int32> value);
        partial void OnalocareIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> nrChitanta
        {
            get
            {
                return _nrChitanta;
            }
            set
            {
                OnnrChitantaChanging(value);
                ReportPropertyChanging("nrChitanta");
                _nrChitanta = StructuralObject.SetValidValue(value, "nrChitanta");
                ReportPropertyChanged("nrChitanta");
                OnnrChitantaChanged();
            }
        }
        private Nullable<global::System.Int32> _nrChitanta;
        partial void OnnrChitantaChanging(Nullable<global::System.Int32> value);
        partial void OnnrChitantaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dataEmitereChitanta
        {
            get
            {
                return _dataEmitereChitanta;
            }
            set
            {
                OndataEmitereChitantaChanging(value);
                ReportPropertyChanging("dataEmitereChitanta");
                _dataEmitereChitanta = StructuralObject.SetValidValue(value, "dataEmitereChitanta");
                ReportPropertyChanged("dataEmitereChitanta");
                OndataEmitereChitantaChanged();
            }
        }
        private Nullable<global::System.DateTime> _dataEmitereChitanta;
        partial void OndataEmitereChitantaChanging(Nullable<global::System.DateTime> value);
        partial void OndataEmitereChitantaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cnpDetinator
        {
            get
            {
                return _cnpDetinator;
            }
            set
            {
                OncnpDetinatorChanging(value);
                ReportPropertyChanging("cnpDetinator");
                _cnpDetinator = StructuralObject.SetValidValue(value, true, "cnpDetinator");
                ReportPropertyChanged("cnpDetinator");
                OncnpDetinatorChanged();
            }
        }
        private global::System.String _cnpDetinator;
        partial void OncnpDetinatorChanging(global::System.String value);
        partial void OncnpDetinatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> pozaId
        {
            get
            {
                return _pozaId;
            }
            set
            {
                OnpozaIdChanging(value);
                ReportPropertyChanging("pozaId");
                _pozaId = StructuralObject.SetValidValue(value, "pozaId");
                ReportPropertyChanged("pozaId");
                OnpozaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _pozaId;
        partial void OnpozaIdChanging(Nullable<global::System.Int32> value);
        partial void OnpozaIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK__AlocareCu__cnpDe__267ABA7A", "Persoana")]
        public Persoana Persoana
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK__AlocareCu__cnpDe__267ABA7A", "Persoana").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK__AlocareCu__cnpDe__267ABA7A", "Persoana").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persoana> PersoanaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK__AlocareCu__cnpDe__267ABA7A", "Persoana");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persoana>("NecropolisModel.FK__AlocareCu__cnpDe__267ABA7A", "Persoana", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK__AlocareCu__pozaI__276EDEB3", "Poza")]
        public Poza Poza
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poza>("NecropolisModel.FK__AlocareCu__pozaI__276EDEB3", "Poza").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poza>("NecropolisModel.FK__AlocareCu__pozaI__276EDEB3", "Poza").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Poza> PozaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Poza>("NecropolisModel.FK__AlocareCu__pozaI__276EDEB3", "Poza");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Poza>("NecropolisModel.FK__AlocareCu__pozaI__276EDEB3", "Poza", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_AlocareCuProprietar_AlocareLoc", "AlocareLoc")]
        public AlocareLoc AlocareLoc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlocareLoc>("NecropolisModel.FK_AlocareCuProprietar_AlocareLoc", "AlocareLoc").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlocareLoc>("NecropolisModel.FK_AlocareCuProprietar_AlocareLoc", "AlocareLoc").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AlocareLoc> AlocareLocReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlocareLoc>("NecropolisModel.FK_AlocareCuProprietar_AlocareLoc", "AlocareLoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AlocareLoc>("NecropolisModel.FK_AlocareCuProprietar_AlocareLoc", "AlocareLoc", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="AlocareFaraProprietar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlocareFaraProprietar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlocareFaraProprietar object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static AlocareFaraProprietar CreateAlocareFaraProprietar(global::System.Int32 id)
        {
            AlocareFaraProprietar alocareFaraProprietar = new AlocareFaraProprietar();
            alocareFaraProprietar.id = id;
            return alocareFaraProprietar;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> alocareId
        {
            get
            {
                return _alocareId;
            }
            set
            {
                OnalocareIdChanging(value);
                ReportPropertyChanging("alocareId");
                _alocareId = StructuralObject.SetValidValue(value, "alocareId");
                ReportPropertyChanged("alocareId");
                OnalocareIdChanged();
            }
        }
        private Nullable<global::System.Int32> _alocareId;
        partial void OnalocareIdChanging(Nullable<global::System.Int32> value);
        partial void OnalocareIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> solicitareAsistentaSociala
        {
            get
            {
                return _solicitareAsistentaSociala;
            }
            set
            {
                OnsolicitareAsistentaSocialaChanging(value);
                ReportPropertyChanging("solicitareAsistentaSociala");
                _solicitareAsistentaSociala = StructuralObject.SetValidValue(value, "solicitareAsistentaSociala");
                ReportPropertyChanged("solicitareAsistentaSociala");
                OnsolicitareAsistentaSocialaChanged();
            }
        }
        private Nullable<global::System.Int32> _solicitareAsistentaSociala;
        partial void OnsolicitareAsistentaSocialaChanging(Nullable<global::System.Int32> value);
        partial void OnsolicitareAsistentaSocialaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> nrAdeverintaInhumare
        {
            get
            {
                return _nrAdeverintaInhumare;
            }
            set
            {
                OnnrAdeverintaInhumareChanging(value);
                ReportPropertyChanging("nrAdeverintaInhumare");
                _nrAdeverintaInhumare = StructuralObject.SetValidValue(value, "nrAdeverintaInhumare");
                ReportPropertyChanged("nrAdeverintaInhumare");
                OnnrAdeverintaInhumareChanged();
            }
        }
        private Nullable<global::System.Int32> _nrAdeverintaInhumare;
        partial void OnnrAdeverintaInhumareChanging(Nullable<global::System.Int32> value);
        partial void OnnrAdeverintaInhumareChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_AlocareFaraProprietar", "AlocareLoc")]
        public AlocareLoc AlocareLoc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlocareLoc>("NecropolisModel.FK_AlocareFaraProprietar", "AlocareLoc").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlocareLoc>("NecropolisModel.FK_AlocareFaraProprietar", "AlocareLoc").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AlocareLoc> AlocareLocReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlocareLoc>("NecropolisModel.FK_AlocareFaraProprietar", "AlocareLoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AlocareLoc>("NecropolisModel.FK_AlocareFaraProprietar", "AlocareLoc", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="AlocareLoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlocareLoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlocareLoc object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static AlocareLoc CreateAlocareLoc(global::System.Int32 id)
        {
            AlocareLoc alocareLoc = new AlocareLoc();
            alocareLoc.id = id;
            return alocareLoc;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> suprafata
        {
            get
            {
                return _suprafata;
            }
            set
            {
                OnsuprafataChanging(value);
                ReportPropertyChanging("suprafata");
                _suprafata = StructuralObject.SetValidValue(value, "suprafata");
                ReportPropertyChanged("suprafata");
                OnsuprafataChanged();
            }
        }
        private Nullable<global::System.Decimal> _suprafata;
        partial void OnsuprafataChanging(Nullable<global::System.Decimal> value);
        partial void OnsuprafataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dataExpirare
        {
            get
            {
                return _dataExpirare;
            }
            set
            {
                OndataExpirareChanging(value);
                ReportPropertyChanging("dataExpirare");
                _dataExpirare = StructuralObject.SetValidValue(value, "dataExpirare");
                ReportPropertyChanged("dataExpirare");
                OndataExpirareChanged();
            }
        }
        private Nullable<global::System.DateTime> _dataExpirare;
        partial void OndataExpirareChanging(Nullable<global::System.DateTime> value);
        partial void OndataExpirareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> mormantId
        {
            get
            {
                return _mormantId;
            }
            set
            {
                OnmormantIdChanging(value);
                ReportPropertyChanging("mormantId");
                _mormantId = StructuralObject.SetValidValue(value, "mormantId");
                ReportPropertyChanged("mormantId");
                OnmormantIdChanged();
            }
        }
        private Nullable<global::System.Int32> _mormantId;
        partial void OnmormantIdChanging(Nullable<global::System.Int32> value);
        partial void OnmormantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cnpDecedat
        {
            get
            {
                return _cnpDecedat;
            }
            set
            {
                OncnpDecedatChanging(value);
                ReportPropertyChanging("cnpDecedat");
                _cnpDecedat = StructuralObject.SetValidValue(value, true, "cnpDecedat");
                ReportPropertyChanged("cnpDecedat");
                OncnpDecedatChanged();
            }
        }
        private global::System.String _cnpDecedat;
        partial void OncnpDecedatChanging(global::System.String value);
        partial void OncnpDecedatChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_AlocareCuProprietar_AlocareLoc", "AlocareCuProprietar")]
        public EntityCollection<AlocareCuProprietar> AlocareCuProprietar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlocareCuProprietar>("NecropolisModel.FK_AlocareCuProprietar_AlocareLoc", "AlocareCuProprietar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlocareCuProprietar>("NecropolisModel.FK_AlocareCuProprietar_AlocareLoc", "AlocareCuProprietar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_AlocareFaraProprietar", "AlocareFaraProprietar")]
        public EntityCollection<AlocareFaraProprietar> AlocareFaraProprietar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlocareFaraProprietar>("NecropolisModel.FK_AlocareFaraProprietar", "AlocareFaraProprietar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlocareFaraProprietar>("NecropolisModel.FK_AlocareFaraProprietar", "AlocareFaraProprietar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_AlocalreLoc_Persoana", "Persoana")]
        public Persoana Persoana
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_AlocalreLoc_Persoana", "Persoana").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_AlocalreLoc_Persoana", "Persoana").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persoana> PersoanaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_AlocalreLoc_Persoana", "Persoana");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persoana>("NecropolisModel.FK_AlocalreLoc_Persoana", "Persoana", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_AlocareLoc_Mormant", "Mormant")]
        public Mormant Mormant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mormant>("NecropolisModel.FK_AlocareLoc_Mormant", "Mormant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mormant>("NecropolisModel.FK_AlocareLoc_Mormant", "Mormant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mormant> MormantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mormant>("NecropolisModel.FK_AlocareLoc_Mormant", "Mormant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mormant>("NecropolisModel.FK_AlocareLoc_Mormant", "Mormant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_ContractConcesiune_AlocareLoc", "ContractConcesiune")]
        public EntityCollection<ContractConcesiune> ContractConcesiune
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractConcesiune>("NecropolisModel.FK_ContractConcesiune_AlocareLoc", "ContractConcesiune");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractConcesiune>("NecropolisModel.FK_ContractConcesiune_AlocareLoc", "ContractConcesiune", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="CerereLoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CerereLoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CerereLoc object.
        /// </summary>
        /// <param name="numar">Initial value of the numar property.</param>
        public static CerereLoc CreateCerereLoc(global::System.Int32 numar)
        {
            CerereLoc cerereLoc = new CerereLoc();
            cerereLoc.numar = numar;
            return cerereLoc;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 numar
        {
            get
            {
                return _numar;
            }
            set
            {
                if (_numar != value)
                {
                    OnnumarChanging(value);
                    ReportPropertyChanging("numar");
                    _numar = StructuralObject.SetValidValue(value, "numar");
                    ReportPropertyChanged("numar");
                    OnnumarChanged();
                }
            }
        }
        private global::System.Int32 _numar;
        partial void OnnumarChanging(global::System.Int32 value);
        partial void OnnumarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dataInregistrare
        {
            get
            {
                return _dataInregistrare;
            }
            set
            {
                OndataInregistrareChanging(value);
                ReportPropertyChanging("dataInregistrare");
                _dataInregistrare = StructuralObject.SetValidValue(value, "dataInregistrare");
                ReportPropertyChanged("dataInregistrare");
                OndataInregistrareChanged();
            }
        }
        private Nullable<global::System.DateTime> _dataInregistrare;
        partial void OndataInregistrareChanging(Nullable<global::System.DateTime> value);
        partial void OndataInregistrareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> nrInfocet
        {
            get
            {
                return _nrInfocet;
            }
            set
            {
                OnnrInfocetChanging(value);
                ReportPropertyChanging("nrInfocet");
                _nrInfocet = StructuralObject.SetValidValue(value, "nrInfocet");
                ReportPropertyChanged("nrInfocet");
                OnnrInfocetChanged();
            }
        }
        private Nullable<global::System.Int32> _nrInfocet;
        partial void OnnrInfocetChanging(Nullable<global::System.Int32> value);
        partial void OnnrInfocetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> stadiuId
        {
            get
            {
                return _stadiuId;
            }
            set
            {
                OnstadiuIdChanging(value);
                ReportPropertyChanging("stadiuId");
                _stadiuId = StructuralObject.SetValidValue(value, "stadiuId");
                ReportPropertyChanged("stadiuId");
                OnstadiuIdChanged();
            }
        }
        private Nullable<global::System.Int32> _stadiuId;
        partial void OnstadiuIdChanging(Nullable<global::System.Int32> value);
        partial void OnstadiuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cnpPersoana
        {
            get
            {
                return _cnpPersoana;
            }
            set
            {
                OncnpPersoanaChanging(value);
                ReportPropertyChanging("cnpPersoana");
                _cnpPersoana = StructuralObject.SetValidValue(value, true, "cnpPersoana");
                ReportPropertyChanged("cnpPersoana");
                OncnpPersoanaChanged();
            }
        }
        private global::System.String _cnpPersoana;
        partial void OncnpPersoanaChanging(global::System.String value);
        partial void OncnpPersoanaChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_CerereLoc_Persoana", "Persoana")]
        public Persoana Persoana
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_CerereLoc_Persoana", "Persoana").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_CerereLoc_Persoana", "Persoana").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persoana> PersoanaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_CerereLoc_Persoana", "Persoana");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persoana>("NecropolisModel.FK_CerereLoc_Persoana", "Persoana", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_CerereLoc_Stadiu", "Stadiu")]
        public Stadiu Stadiu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stadiu>("NecropolisModel.FK_CerereLoc_Stadiu", "Stadiu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stadiu>("NecropolisModel.FK_CerereLoc_Stadiu", "Stadiu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stadiu> StadiuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stadiu>("NecropolisModel.FK_CerereLoc_Stadiu", "Stadiu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stadiu>("NecropolisModel.FK_CerereLoc_Stadiu", "Stadiu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Cimitir")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cimitir : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cimitir object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Cimitir CreateCimitir(global::System.Int32 id)
        {
            Cimitir cimitir = new Cimitir();
            cimitir.id = id;
            return cimitir;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nume
        {
            get
            {
                return _nume;
            }
            set
            {
                OnnumeChanging(value);
                ReportPropertyChanging("nume");
                _nume = StructuralObject.SetValidValue(value, true, "nume");
                ReportPropertyChanged("nume");
                OnnumeChanged();
            }
        }
        private global::System.String _nume;
        partial void OnnumeChanging(global::System.String value);
        partial void OnnumeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Mormant_Cimitir", "Mormant")]
        public EntityCollection<Mormant> Mormant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Mormant>("NecropolisModel.FK_Mormant_Cimitir", "Mormant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Mormant>("NecropolisModel.FK_Mormant_Cimitir", "Mormant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="ContractConcesiune")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractConcesiune : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractConcesiune object.
        /// </summary>
        /// <param name="numar">Initial value of the numar property.</param>
        public static ContractConcesiune CreateContractConcesiune(global::System.Int32 numar)
        {
            ContractConcesiune contractConcesiune = new ContractConcesiune();
            contractConcesiune.numar = numar;
            return contractConcesiune;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 numar
        {
            get
            {
                return _numar;
            }
            set
            {
                if (_numar != value)
                {
                    OnnumarChanging(value);
                    ReportPropertyChanging("numar");
                    _numar = StructuralObject.SetValidValue(value, "numar");
                    ReportPropertyChanged("numar");
                    OnnumarChanged();
                }
            }
        }
        private global::System.Int32 _numar;
        partial void OnnumarChanging(global::System.Int32 value);
        partial void OnnumarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dataEliberare
        {
            get
            {
                return _dataEliberare;
            }
            set
            {
                OndataEliberareChanging(value);
                ReportPropertyChanging("dataEliberare");
                _dataEliberare = StructuralObject.SetValidValue(value, "dataEliberare");
                ReportPropertyChanged("dataEliberare");
                OndataEliberareChanged();
            }
        }
        private Nullable<global::System.DateTime> _dataEliberare;
        partial void OndataEliberareChanging(Nullable<global::System.DateTime> value);
        partial void OndataEliberareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dataExpirare
        {
            get
            {
                return _dataExpirare;
            }
            set
            {
                OndataExpirareChanging(value);
                ReportPropertyChanging("dataExpirare");
                _dataExpirare = StructuralObject.SetValidValue(value, "dataExpirare");
                ReportPropertyChanged("dataExpirare");
                OndataExpirareChanged();
            }
        }
        private Nullable<global::System.DateTime> _dataExpirare;
        partial void OndataExpirareChanging(Nullable<global::System.DateTime> value);
        partial void OndataExpirareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> alocareId
        {
            get
            {
                return _alocareId;
            }
            set
            {
                OnalocareIdChanging(value);
                ReportPropertyChanging("alocareId");
                _alocareId = StructuralObject.SetValidValue(value, "alocareId");
                ReportPropertyChanged("alocareId");
                OnalocareIdChanged();
            }
        }
        private Nullable<global::System.Int32> _alocareId;
        partial void OnalocareIdChanging(Nullable<global::System.Int32> value);
        partial void OnalocareIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> nrContract
        {
            get
            {
                return _nrContract;
            }
            set
            {
                OnnrContractChanging(value);
                ReportPropertyChanging("nrContract");
                _nrContract = StructuralObject.SetValidValue(value, "nrContract");
                ReportPropertyChanged("nrContract");
                OnnrContractChanged();
            }
        }
        private Nullable<global::System.Int32> _nrContract;
        partial void OnnrContractChanging(Nullable<global::System.Int32> value);
        partial void OnnrContractChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_ContractConcesiune_AlocareLoc", "AlocareLoc")]
        public AlocareLoc AlocareLoc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlocareLoc>("NecropolisModel.FK_ContractConcesiune_AlocareLoc", "AlocareLoc").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlocareLoc>("NecropolisModel.FK_ContractConcesiune_AlocareLoc", "AlocareLoc").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AlocareLoc> AlocareLocReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AlocareLoc>("NecropolisModel.FK_ContractConcesiune_AlocareLoc", "AlocareLoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AlocareLoc>("NecropolisModel.FK_ContractConcesiune_AlocareLoc", "AlocareLoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "DetinatorContractConcesiune", "Persoana")]
        public EntityCollection<Persoana> Persoana
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Persoana>("NecropolisModel.DetinatorContractConcesiune", "Persoana");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Persoana>("NecropolisModel.DetinatorContractConcesiune", "Persoana", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Domiciliu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Domiciliu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Domiciliu object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Domiciliu CreateDomiciliu(global::System.Int32 id)
        {
            Domiciliu domiciliu = new Domiciliu();
            domiciliu.id = id;
            return domiciliu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> stradaId
        {
            get
            {
                return _stradaId;
            }
            set
            {
                OnstradaIdChanging(value);
                ReportPropertyChanging("stradaId");
                _stradaId = StructuralObject.SetValidValue(value, "stradaId");
                ReportPropertyChanged("stradaId");
                OnstradaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _stradaId;
        partial void OnstradaIdChanging(Nullable<global::System.Int32> value);
        partial void OnstradaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String numar
        {
            get
            {
                return _numar;
            }
            set
            {
                OnnumarChanging(value);
                ReportPropertyChanging("numar");
                _numar = StructuralObject.SetValidValue(value, true, "numar");
                ReportPropertyChanged("numar");
                OnnumarChanged();
            }
        }
        private global::System.String _numar;
        partial void OnnumarChanging(global::System.String value);
        partial void OnnumarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String alteInformatii
        {
            get
            {
                return _alteInformatii;
            }
            set
            {
                OnalteInformatiiChanging(value);
                ReportPropertyChanging("alteInformatii");
                _alteInformatii = StructuralObject.SetValidValue(value, true, "alteInformatii");
                ReportPropertyChanged("alteInformatii");
                OnalteInformatiiChanged();
            }
        }
        private global::System.String _alteInformatii;
        partial void OnalteInformatiiChanging(global::System.String value);
        partial void OnalteInformatiiChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Domiciliu_Strada", "Strada")]
        public Strada Strada
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Strada>("NecropolisModel.FK_Domiciliu_Strada", "Strada").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Strada>("NecropolisModel.FK_Domiciliu_Strada", "Strada").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Strada> StradaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Strada>("NecropolisModel.FK_Domiciliu_Strada", "Strada");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Strada>("NecropolisModel.FK_Domiciliu_Strada", "Strada", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Persoana_Domiciliu", "Persoana")]
        public EntityCollection<Persoana> Persoana
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Persoana>("NecropolisModel.FK_Persoana_Domiciliu", "Persoana");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Persoana>("NecropolisModel.FK_Persoana_Domiciliu", "Persoana", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Istoric")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Istoric : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Istoric object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Istoric CreateIstoric(global::System.Int32 id)
        {
            Istoric istoric = new Istoric();
            istoric.id = id;
            return istoric;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String numeUtilizator
        {
            get
            {
                return _numeUtilizator;
            }
            set
            {
                OnnumeUtilizatorChanging(value);
                ReportPropertyChanging("numeUtilizator");
                _numeUtilizator = StructuralObject.SetValidValue(value, true, "numeUtilizator");
                ReportPropertyChanged("numeUtilizator");
                OnnumeUtilizatorChanged();
            }
        }
        private global::System.String _numeUtilizator;
        partial void OnnumeUtilizatorChanging(global::System.String value);
        partial void OnnumeUtilizatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> data
        {
            get
            {
                return _data;
            }
            set
            {
                OndataChanging(value);
                ReportPropertyChanging("data");
                _data = StructuralObject.SetValidValue(value, "data");
                ReportPropertyChanged("data");
                OndataChanged();
            }
        }
        private Nullable<global::System.DateTime> _data;
        partial void OndataChanging(Nullable<global::System.DateTime> value);
        partial void OndataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numarDocument
        {
            get
            {
                return _numarDocument;
            }
            set
            {
                OnnumarDocumentChanging(value);
                ReportPropertyChanging("numarDocument");
                _numarDocument = StructuralObject.SetValidValue(value, "numarDocument");
                ReportPropertyChanged("numarDocument");
                OnnumarDocumentChanged();
            }
        }
        private Nullable<global::System.Int32> _numarDocument;
        partial void OnnumarDocumentChanging(Nullable<global::System.Int32> value);
        partial void OnnumarDocumentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String detalii
        {
            get
            {
                return _detalii;
            }
            set
            {
                OndetaliiChanging(value);
                ReportPropertyChanging("detalii");
                _detalii = StructuralObject.SetValidValue(value, true, "detalii");
                ReportPropertyChanged("detalii");
                OndetaliiChanged();
            }
        }
        private global::System.String _detalii;
        partial void OndetaliiChanging(global::System.String value);
        partial void OndetaliiChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Localitate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Localitate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Localitate object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Localitate CreateLocalitate(global::System.Int32 id)
        {
            Localitate localitate = new Localitate();
            localitate.id = id;
            return localitate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nume
        {
            get
            {
                return _nume;
            }
            set
            {
                OnnumeChanging(value);
                ReportPropertyChanging("nume");
                _nume = StructuralObject.SetValidValue(value, true, "nume");
                ReportPropertyChanged("nume");
                OnnumeChanged();
            }
        }
        private global::System.String _nume;
        partial void OnnumeChanging(global::System.String value);
        partial void OnnumeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Strada_Localitate", "Strada")]
        public EntityCollection<Strada> Strada
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Strada>("NecropolisModel.FK_Strada_Localitate", "Strada");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Strada>("NecropolisModel.FK_Strada_Localitate", "Strada", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Mormant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mormant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mormant object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Mormant CreateMormant(global::System.Int32 id)
        {
            Mormant mormant = new Mormant();
            mormant.id = id;
            return mormant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cimitirId
        {
            get
            {
                return _cimitirId;
            }
            set
            {
                OncimitirIdChanging(value);
                ReportPropertyChanging("cimitirId");
                _cimitirId = StructuralObject.SetValidValue(value, "cimitirId");
                ReportPropertyChanged("cimitirId");
                OncimitirIdChanged();
            }
        }
        private Nullable<global::System.Int32> _cimitirId;
        partial void OncimitirIdChanging(Nullable<global::System.Int32> value);
        partial void OncimitirIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String parcela
        {
            get
            {
                return _parcela;
            }
            set
            {
                OnparcelaChanging(value);
                ReportPropertyChanging("parcela");
                _parcela = StructuralObject.SetValidValue(value, true, "parcela");
                ReportPropertyChanged("parcela");
                OnparcelaChanged();
            }
        }
        private global::System.String _parcela;
        partial void OnparcelaChanging(global::System.String value);
        partial void OnparcelaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> numar
        {
            get
            {
                return _numar;
            }
            set
            {
                OnnumarChanging(value);
                ReportPropertyChanging("numar");
                _numar = StructuralObject.SetValidValue(value, "numar");
                ReportPropertyChanged("numar");
                OnnumarChanged();
            }
        }
        private Nullable<global::System.Int32> _numar;
        partial void OnnumarChanging(Nullable<global::System.Int32> value);
        partial void OnnumarChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_AlocareLoc_Mormant", "AlocareLoc")]
        public EntityCollection<AlocareLoc> AlocareLoc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlocareLoc>("NecropolisModel.FK_AlocareLoc_Mormant", "AlocareLoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlocareLoc>("NecropolisModel.FK_AlocareLoc_Mormant", "AlocareLoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Mormant_Cimitir", "Cimitir")]
        public Cimitir Cimitir
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cimitir>("NecropolisModel.FK_Mormant_Cimitir", "Cimitir").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cimitir>("NecropolisModel.FK_Mormant_Cimitir", "Cimitir").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cimitir> CimitirReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cimitir>("NecropolisModel.FK_Mormant_Cimitir", "Cimitir");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cimitir>("NecropolisModel.FK_Mormant_Cimitir", "Cimitir", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_ProgramareInmormantare_Mormant", "ProgramareInmormantare")]
        public EntityCollection<ProgramareInmormantare> ProgramareInmormantare
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProgramareInmormantare>("NecropolisModel.FK_ProgramareInmormantare_Mormant", "ProgramareInmormantare");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProgramareInmormantare>("NecropolisModel.FK_ProgramareInmormantare_Mormant", "ProgramareInmormantare", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Persoana")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Persoana : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Persoana object.
        /// </summary>
        /// <param name="cnp">Initial value of the cnp property.</param>
        public static Persoana CreatePersoana(global::System.String cnp)
        {
            Persoana persoana = new Persoana();
            persoana.cnp = cnp;
            return persoana;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cnp
        {
            get
            {
                return _cnp;
            }
            set
            {
                if (_cnp != value)
                {
                    OncnpChanging(value);
                    ReportPropertyChanging("cnp");
                    _cnp = StructuralObject.SetValidValue(value, false, "cnp");
                    ReportPropertyChanged("cnp");
                    OncnpChanged();
                }
            }
        }
        private global::System.String _cnp;
        partial void OncnpChanging(global::System.String value);
        partial void OncnpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nume
        {
            get
            {
                return _nume;
            }
            set
            {
                OnnumeChanging(value);
                ReportPropertyChanging("nume");
                _nume = StructuralObject.SetValidValue(value, true, "nume");
                ReportPropertyChanged("nume");
                OnnumeChanged();
            }
        }
        private global::System.String _nume;
        partial void OnnumeChanging(global::System.String value);
        partial void OnnumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String prenume
        {
            get
            {
                return _prenume;
            }
            set
            {
                OnprenumeChanging(value);
                ReportPropertyChanging("prenume");
                _prenume = StructuralObject.SetValidValue(value, true, "prenume");
                ReportPropertyChanged("prenume");
                OnprenumeChanged();
            }
        }
        private global::System.String _prenume;
        partial void OnprenumeChanging(global::System.String value);
        partial void OnprenumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> domiciliuId
        {
            get
            {
                return _domiciliuId;
            }
            set
            {
                OndomiciliuIdChanging(value);
                ReportPropertyChanging("domiciliuId");
                _domiciliuId = StructuralObject.SetValidValue(value, "domiciliuId");
                ReportPropertyChanged("domiciliuId");
                OndomiciliuIdChanged();
            }
        }
        private Nullable<global::System.Int32> _domiciliuId;
        partial void OndomiciliuIdChanging(Nullable<global::System.Int32> value);
        partial void OndomiciliuIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK__AlocareCu__cnpDe__267ABA7A", "AlocareCuProprietar")]
        public EntityCollection<AlocareCuProprietar> AlocareCuProprietar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlocareCuProprietar>("NecropolisModel.FK__AlocareCu__cnpDe__267ABA7A", "AlocareCuProprietar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlocareCuProprietar>("NecropolisModel.FK__AlocareCu__cnpDe__267ABA7A", "AlocareCuProprietar", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_AlocalreLoc_Persoana", "AlocareLoc")]
        public EntityCollection<AlocareLoc> AlocareLoc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlocareLoc>("NecropolisModel.FK_AlocalreLoc_Persoana", "AlocareLoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlocareLoc>("NecropolisModel.FK_AlocalreLoc_Persoana", "AlocareLoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_CerereLoc_Persoana", "CerereLoc")]
        public EntityCollection<CerereLoc> CerereLoc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CerereLoc>("NecropolisModel.FK_CerereLoc_Persoana", "CerereLoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CerereLoc>("NecropolisModel.FK_CerereLoc_Persoana", "CerereLoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Persoana_Domiciliu", "Domiciliu")]
        public Domiciliu Domiciliu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domiciliu>("NecropolisModel.FK_Persoana_Domiciliu", "Domiciliu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domiciliu>("NecropolisModel.FK_Persoana_Domiciliu", "Domiciliu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Domiciliu> DomiciliuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Domiciliu>("NecropolisModel.FK_Persoana_Domiciliu", "Domiciliu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Domiciliu>("NecropolisModel.FK_Persoana_Domiciliu", "Domiciliu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_ProgramareInmormantare_Persoana", "ProgramareInmormantare")]
        public EntityCollection<ProgramareInmormantare> ProgramareInmormantare
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProgramareInmormantare>("NecropolisModel.FK_ProgramareInmormantare_Persoana", "ProgramareInmormantare");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProgramareInmormantare>("NecropolisModel.FK_ProgramareInmormantare_Persoana", "ProgramareInmormantare", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Reclamatie_Persoana", "Reclamatie")]
        public EntityCollection<Reclamatie> Reclamatie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reclamatie>("NecropolisModel.FK_Reclamatie_Persoana", "Reclamatie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reclamatie>("NecropolisModel.FK_Reclamatie_Persoana", "Reclamatie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "DetinatorContractConcesiune", "ContractConcesiune")]
        public EntityCollection<ContractConcesiune> ContractConcesiune
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractConcesiune>("NecropolisModel.DetinatorContractConcesiune", "ContractConcesiune");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractConcesiune>("NecropolisModel.DetinatorContractConcesiune", "ContractConcesiune", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Poza")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Poza : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Poza object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Poza CreatePoza(global::System.Int32 id)
        {
            Poza poza = new Poza();
            poza.id = id;
            return poza;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] continut
        {
            get
            {
                return StructuralObject.GetValidValue(_continut);
            }
            set
            {
                OncontinutChanging(value);
                ReportPropertyChanging("continut");
                _continut = StructuralObject.SetValidValue(value, true, "continut");
                ReportPropertyChanged("continut");
                OncontinutChanged();
            }
        }
        private global::System.Byte[] _continut;
        partial void OncontinutChanging(global::System.Byte[] value);
        partial void OncontinutChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK__AlocareCu__pozaI__276EDEB3", "AlocareCuProprietar")]
        public EntityCollection<AlocareCuProprietar> AlocareCuProprietar
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlocareCuProprietar>("NecropolisModel.FK__AlocareCu__pozaI__276EDEB3", "AlocareCuProprietar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlocareCuProprietar>("NecropolisModel.FK__AlocareCu__pozaI__276EDEB3", "AlocareCuProprietar", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="ProgramareInmormantare")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProgramareInmormantare : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProgramareInmormantare object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static ProgramareInmormantare CreateProgramareInmormantare(global::System.Int32 id)
        {
            ProgramareInmormantare programareInmormantare = new ProgramareInmormantare();
            programareInmormantare.id = id;
            return programareInmormantare;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cnpDecedat
        {
            get
            {
                return _cnpDecedat;
            }
            set
            {
                OncnpDecedatChanging(value);
                ReportPropertyChanging("cnpDecedat");
                _cnpDecedat = StructuralObject.SetValidValue(value, true, "cnpDecedat");
                ReportPropertyChanged("cnpDecedat");
                OncnpDecedatChanged();
            }
        }
        private global::System.String _cnpDecedat;
        partial void OncnpDecedatChanging(global::System.String value);
        partial void OncnpDecedatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> religieId
        {
            get
            {
                return _religieId;
            }
            set
            {
                OnreligieIdChanging(value);
                ReportPropertyChanging("religieId");
                _religieId = StructuralObject.SetValidValue(value, "religieId");
                ReportPropertyChanged("religieId");
                OnreligieIdChanged();
            }
        }
        private Nullable<global::System.Int32> _religieId;
        partial void OnreligieIdChanging(Nullable<global::System.Int32> value);
        partial void OnreligieIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> mormantId
        {
            get
            {
                return _mormantId;
            }
            set
            {
                OnmormantIdChanging(value);
                ReportPropertyChanging("mormantId");
                _mormantId = StructuralObject.SetValidValue(value, "mormantId");
                ReportPropertyChanged("mormantId");
                OnmormantIdChanged();
            }
        }
        private Nullable<global::System.Int32> _mormantId;
        partial void OnmormantIdChanging(Nullable<global::System.Int32> value);
        partial void OnmormantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dataInmormantarii
        {
            get
            {
                return _dataInmormantarii;
            }
            set
            {
                OndataInmormantariiChanging(value);
                ReportPropertyChanging("dataInmormantarii");
                _dataInmormantarii = StructuralObject.SetValidValue(value, "dataInmormantarii");
                ReportPropertyChanged("dataInmormantarii");
                OndataInmormantariiChanged();
            }
        }
        private Nullable<global::System.DateTime> _dataInmormantarii;
        partial void OndataInmormantariiChanging(Nullable<global::System.DateTime> value);
        partial void OndataInmormantariiChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_ProgramareInmormantare_Mormant", "Mormant")]
        public Mormant Mormant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mormant>("NecropolisModel.FK_ProgramareInmormantare_Mormant", "Mormant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mormant>("NecropolisModel.FK_ProgramareInmormantare_Mormant", "Mormant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mormant> MormantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mormant>("NecropolisModel.FK_ProgramareInmormantare_Mormant", "Mormant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mormant>("NecropolisModel.FK_ProgramareInmormantare_Mormant", "Mormant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_ProgramareInmormantare_Persoana", "Persoana")]
        public Persoana Persoana
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_ProgramareInmormantare_Persoana", "Persoana").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_ProgramareInmormantare_Persoana", "Persoana").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persoana> PersoanaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_ProgramareInmormantare_Persoana", "Persoana");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persoana>("NecropolisModel.FK_ProgramareInmormantare_Persoana", "Persoana", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_ProgramareInmormantare_Religie", "Religie")]
        public Religie Religie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religie>("NecropolisModel.FK_ProgramareInmormantare_Religie", "Religie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religie>("NecropolisModel.FK_ProgramareInmormantare_Religie", "Religie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Religie> ReligieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Religie>("NecropolisModel.FK_ProgramareInmormantare_Religie", "Religie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Religie>("NecropolisModel.FK_ProgramareInmormantare_Religie", "Religie", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Reclamatie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reclamatie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reclamatie object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Reclamatie CreateReclamatie(global::System.Int32 id)
        {
            Reclamatie reclamatie = new Reclamatie();
            reclamatie.id = id;
            return reclamatie;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cnpReclamant
        {
            get
            {
                return _cnpReclamant;
            }
            set
            {
                OncnpReclamantChanging(value);
                ReportPropertyChanging("cnpReclamant");
                _cnpReclamant = StructuralObject.SetValidValue(value, true, "cnpReclamant");
                ReportPropertyChanged("cnpReclamant");
                OncnpReclamantChanged();
            }
        }
        private global::System.String _cnpReclamant;
        partial void OncnpReclamantChanging(global::System.String value);
        partial void OncnpReclamantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dataInregistrare
        {
            get
            {
                return _dataInregistrare;
            }
            set
            {
                OndataInregistrareChanging(value);
                ReportPropertyChanging("dataInregistrare");
                _dataInregistrare = StructuralObject.SetValidValue(value, "dataInregistrare");
                ReportPropertyChanged("dataInregistrare");
                OndataInregistrareChanged();
            }
        }
        private Nullable<global::System.DateTime> _dataInregistrare;
        partial void OndataInregistrareChanging(Nullable<global::System.DateTime> value);
        partial void OndataInregistrareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String detalii
        {
            get
            {
                return _detalii;
            }
            set
            {
                OndetaliiChanging(value);
                ReportPropertyChanging("detalii");
                _detalii = StructuralObject.SetValidValue(value, true, "detalii");
                ReportPropertyChanged("detalii");
                OndetaliiChanged();
            }
        }
        private global::System.String _detalii;
        partial void OndetaliiChanging(global::System.String value);
        partial void OndetaliiChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Reclamatie_Persoana", "Persoana")]
        public Persoana Persoana
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_Reclamatie_Persoana", "Persoana").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_Reclamatie_Persoana", "Persoana").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persoana> PersoanaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persoana>("NecropolisModel.FK_Reclamatie_Persoana", "Persoana");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persoana>("NecropolisModel.FK_Reclamatie_Persoana", "Persoana", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Religie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Religie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Religie object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Religie CreateReligie(global::System.Int32 id)
        {
            Religie religie = new Religie();
            religie.id = id;
            return religie;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nume
        {
            get
            {
                return _nume;
            }
            set
            {
                OnnumeChanging(value);
                ReportPropertyChanging("nume");
                _nume = StructuralObject.SetValidValue(value, true, "nume");
                ReportPropertyChanged("nume");
                OnnumeChanged();
            }
        }
        private global::System.String _nume;
        partial void OnnumeChanging(global::System.String value);
        partial void OnnumeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_ProgramareInmormantare_Religie", "ProgramareInmormantare")]
        public EntityCollection<ProgramareInmormantare> ProgramareInmormantare
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProgramareInmormantare>("NecropolisModel.FK_ProgramareInmormantare_Religie", "ProgramareInmormantare");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProgramareInmormantare>("NecropolisModel.FK_ProgramareInmormantare_Religie", "ProgramareInmormantare", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Stadiu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stadiu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stadiu object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Stadiu CreateStadiu(global::System.Int32 id)
        {
            Stadiu stadiu = new Stadiu();
            stadiu.id = id;
            return stadiu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nume
        {
            get
            {
                return _nume;
            }
            set
            {
                OnnumeChanging(value);
                ReportPropertyChanging("nume");
                _nume = StructuralObject.SetValidValue(value, true, "nume");
                ReportPropertyChanged("nume");
                OnnumeChanged();
            }
        }
        private global::System.String _nume;
        partial void OnnumeChanging(global::System.String value);
        partial void OnnumeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_CerereLoc_Stadiu", "CerereLoc")]
        public EntityCollection<CerereLoc> CerereLoc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CerereLoc>("NecropolisModel.FK_CerereLoc_Stadiu", "CerereLoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CerereLoc>("NecropolisModel.FK_CerereLoc_Stadiu", "CerereLoc", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NecropolisModel", Name="Strada")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Strada : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Strada object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Strada CreateStrada(global::System.Int32 id)
        {
            Strada strada = new Strada();
            strada.id = id;
            return strada;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> localitateId
        {
            get
            {
                return _localitateId;
            }
            set
            {
                OnlocalitateIdChanging(value);
                ReportPropertyChanging("localitateId");
                _localitateId = StructuralObject.SetValidValue(value, "localitateId");
                ReportPropertyChanged("localitateId");
                OnlocalitateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _localitateId;
        partial void OnlocalitateIdChanging(Nullable<global::System.Int32> value);
        partial void OnlocalitateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nume
        {
            get
            {
                return _nume;
            }
            set
            {
                OnnumeChanging(value);
                ReportPropertyChanging("nume");
                _nume = StructuralObject.SetValidValue(value, true, "nume");
                ReportPropertyChanged("nume");
                OnnumeChanged();
            }
        }
        private global::System.String _nume;
        partial void OnnumeChanging(global::System.String value);
        partial void OnnumeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Domiciliu_Strada", "Domiciliu")]
        public EntityCollection<Domiciliu> Domiciliu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Domiciliu>("NecropolisModel.FK_Domiciliu_Strada", "Domiciliu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Domiciliu>("NecropolisModel.FK_Domiciliu_Strada", "Domiciliu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NecropolisModel", "FK_Strada_Localitate", "Localitate")]
        public Localitate Localitate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Localitate>("NecropolisModel.FK_Strada_Localitate", "Localitate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Localitate>("NecropolisModel.FK_Strada_Localitate", "Localitate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Localitate> LocalitateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Localitate>("NecropolisModel.FK_Strada_Localitate", "Localitate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Localitate>("NecropolisModel.FK_Strada_Localitate", "Localitate", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
